<?php
/*
 * 内容管理 控制器
 * */
namespace app\admin\controller;


use app\admin\model\ArticleClassify;
use app\admin\model\Articles;
use app\admin\model\ArticlesShare;
use app\admin\model\Banner as BannerModel;
use think\Db;
use think\Exception;
use think\facade\Request;



class Article extends BaseUser
{
    //中间件
    protected $middleware = [
        'app\admin\middleware\Auth' => [
            //无须权限验证
            'except' => ['guide','uploadPic','_empty','changeArticle','saveEdit','saveBanner',
                'changeSort','preview','uploadBanner','share','uploadFile','createCode','changeField'
            ]
        ],
    ];

    protected $pid=25;
    protected $left_menus=[];
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->assign('nav_path',Db::name('menus')->where('id',$this->pid)->value('link'));
        $left_menus=$this->getNav($this->pid);
        $this->left_menus=$left_menus;
        $this->assign("left_menus",$left_menus);

    }

    public function guide(){
        if(count($this->left_menus)){
            $menu=array_shift($this->left_menus);
            return redirect($menu['link']);
        }else{
            return view('public/guide');
        }
    }

    //文章列表
    public function index()
    {
        if(Request::isAjax()){

            $listRow=input('limit');
            $where=input('where',[]);
            $map=[];
            if(!empty($where)){
                if(!empty($where['title'])){
                    $map[]=['title','like',"%{$where['title']}%"];
                }
                if($where['classify']){
                    $map[]=['type','=',$where['classify']];
                }
            }
            //获取数据
            $data=Db::name('articles')->where($map)->order('update_time desc')->paginate($listRow)->each(function ($item){
                $item['create_time']=date('Y年m月d日',$item['create_time']);
                return $item;
            });

            return json(['code'=>0,'msg'=>'','count'=>$data->total(),'data'=>$data->items()]);
        }else{

            $this->assign('nav_title',"admin/article/index");
            return view('index');
        }

    }

    //修改页
    public function edit(){

        $id=input('id',0);
        if($id){
            $info=Articles::with('content')->find($id);
            $this->assign('info',$info);
        }
        //上级分类
        $data = ArticleClassify::field("article_classify_id,classify_name")
            ->where('mode',2)
            ->select()->toArray();
        $this->assign('data',$data);

        $this->assign('nav_title',"admin/article/index");
        return view('edit');
    }

    //编辑提交
    public function saveEdit()
    {
        $data=input('post.');
        $id = input('id',0);
        $content=htmlspecialchars_decode($data['content']);
        unset($data['images'],$data['id'],$data['content']);
        try{
            $validate=new \app\admin\validate\Articles();
            if(!$validate->check($data)){
                throw new Exception($validate->getError());
            }


            if($id){
                $info=Articles::get($id);
                if(!$info){
                    throw new Exception('参数错误，文章已被删除');
                }
                $type=3;
                $msg='修改文章';

                /****若图片更改，则删除原图****/
                //获取原图
                $old_pic=$info->cover;

                $res=$info->save($data);
                $info->content->save(['content'=>$content]);
                if($res){
                    if(!$old_pic && $old_pic!=$data['cover']){
                        //删除原图片文件
                        @unlink('.'.$old_pic);
                    }
                }

            }else{
                $type=1;
                $msg='添加文章';
                $data['browse']=rand(3000,5000);
                $data['thumbs']=rand(100,800);
                $res=Articles::create($data);
                $res->content()->save(['content'=>$content]);
            }

            if(!$res){
                throw new Exception('网络延迟，稍后再试');
            }
            $this->err['code']=0;
            $this->err['msg']=$msg."【{$data['title']}】".'成功！';
            //添加日志
            $this->addLog($type,$msg."【{$data['title']}】");
        }catch (Exception $e){
            $this->err['msg']=$e->getMessage();
        }

        return json($this->err);
    }

    //ajax修改状态
    public function changeArticle()
    {
        $id=input('id');
        $field=input('post.field');
        $info=Articles::find($id);
        if(!$info){
            $this->err['msg']='未知参数';
            return json($this->err);
        }
        $new_val=$info[$field]==1?0:1;
        $info[$field]=$new_val;
        $row=$info->save();
        if($row){
            $this->err['code']=0;
            $this->err['data']=$new_val;
            //添加日志
            $this->addLog(3,'修改文章【'.$info['title'].'】'.$field);
        }else{
            $this->err['msg']='网络延迟，稍后再试';
        }

        return json($this->err);
    }

    //ajax修改字段值
    public function changeField()
    {
        $id=input('id');

        $info=Db::name('articles')->find($id);
        if(!$info){
            $this->err['msg']='未知参数';
            return json($this->err);
        }
        $field=input('post.field');
        $value=input('value');
        $row=Db::name('articles')->update([$field=>$value,'id'=>$id]);
        if($row){
            $this->err['code']=0;
            switch ($field){
                case "sort":
                    $str='排序';
                    break;
                case "title":
                    $str='标题';
                    break;
                case "writer":
                    $str='作者';
                    break;

            }
            //添加日志
            $this->addLog(3,'修改新闻资讯【'.$info['title'].'】'.$str);
        }else{
            $this->err['msg']='网络延迟，稍后再试';
        }

        return json($this->err);
    }

    //删除
    public function del(){

        $id=input('id');

        $info=Articles::get($id,'content');
        if(!$info){
            $this->err['msg']='未知的参数';
            return json($this->err);
        }
        $title=$info->title;
        $pic_url='.'.$info->cover;
        $info->content;     //手动加载关联模型，此步骤必须，否则无法关联删除。
        $re=$info->together('content')->delete();
        if($re){
            $this->err['code']=0;
            //删除图片文件
            @unlink($pic_url);
            //添加日志
            $this->addLog(2,'删除文章【'.$title.'】');
        }else{
            $this->err['msg']='网络延迟，稍后重试';
        }

        return json($this->err);
    }

    //预览
    public function preview(){
        $id=input('id',0);
        //商品详情
        $info=Articles::with('content')
            ->field('id,title,create_time,cover')
            ->find($id);

        $this->assign('info',$info);

        return view('preview');
    }

    //查看分享
    public function share(){
        if(Request::isAjax()){
            $listRow=input('limit');
            $aid=input('aid');
            //获取数据
            $data=ArticlesShare::with('article')
                ->where('articles_id',$aid)
                ->order('create_time desc')
                ->paginate($listRow);

            return json(['code'=>0,'msg'=>'','count'=>$data->total(),'data'=>$data->items()]);
        }else{
            $id=input('id');
            $this->assign('aid',$id);

            return view('share');
        }
    }

    //生成文章二维码
    public function createCode(){
        $id=input('id');
        $code_url='https://wxapp.reizmedia.com/custom/article/info?id='.$id;
        $this->assign('code_url',$code_url);


        return view('code');
    }

    /****************************banner*****************************/

    //BANNER图
    public function banner()
    {
        if(Request::isAjax()){

            $listRow=input('limit');

            //获取数据
            $data=Db::name('banner')
                ->order('sort desc')
                ->paginate($listRow)
                ->each(function ($item){
                    $item['create_time']=date('Y年m月d日',$item['create_time']);
                    return $item;
                });

            return json(['code'=>0,'msg'=>'','count'=>$data->total(),'data'=>$data->items()]);
        }else{
            $this->assign('nav_title',"admin/article/banner");
            return view('banner');
        }
    }

    //编辑
    public function bannerEdit(){
        $id=input('id');
        if($id){
            $info=Db::name('banner')->find($id);
            $this->assign('info',$info);
        }
        $this->assign('nav_title',"admin/article/banner");
        return view('banner_edit');
    }

    //BANNER图编辑提交
    public function saveBanner()
    {
        $data=input('post.');
        $id=input('id',0);
        unset($data['images'],$data['id']);
        try{
            $validate=new \app\admin\validate\Banner();
            if(!$validate->check($data)){
                throw new Exception($validate->getError(),2);
            }
            if($id){
                $type=3;
                $msg='修改BANNER图';
                $info=BannerModel::find($id);
                if(!$info){
                    throw new Exception('无效的参数');
                }
                $old_pic=$info->cover;
                $res=$info->save($data);
                if(!$res){
                    throw new Exception('网络延迟，稍后再试');
                }
                if(!empty($old_pic) && $old_pic!=$data['cover']){
                    //删除原图片文件
                    @unlink('.'.$old_pic);
                }

            }else{
                $type=1;
                $msg='添加BANNER图';
                $res=BannerModel::create($data);
                if(!$res){
                    throw new Exception('网络延迟，稍后再试');
                }
            }

            $this->err['code']=0;
            $this->err['msg']=$msg."【{$data['title']}】".'成功！';
            //添加日志
            $this->addLog($type,$this->err['msg']);
        }catch (Exception $e){
            $this->err['msg']=$e->getMessage();
        }

        return json($this->err);
    }


    //ajax修改排序值
    public function changeSort()
    {
        $id=input('id');

        $info=BannerModel::find($id);
        if(!$info){
            $this->err['msg']='未知参数';
            return json($this->err);
        }
        $field=input('post.field','');
        $value=input('post.value','');
        if(!$field || strlen($value)<1){
            $this->err['msg']='未知参数';
            return json($this->err);
        }
        $info[$field]=$value;
        $row=$info->save();
        if($row){
            $this->err['code']=0;
            $this->err['data']=$value;
            $t_s='标题';
            switch ($field){
                case 'sort':
                    $t_s='排序';
                    break;
                case 'status':
                    $t_s='显示状态';
                    break;
                case 'link':
                    $t_s='跳转链接';
                    break;
            }
            //添加日志
            $this->addLog(3,'修改BANNER图【'.$info['title'].'】'.$t_s);
        }else{
            $this->err['msg']='网络延迟，稍后再试';
        }

        return json($this->err);
    }

    //删除
    public function delBanner(){

        $id=input('id');

        $info=Db::name('banner')->find($id);
        if(!$info){
            $this->err['msg']='未知的参数';
        }
        $pic_url='.'.$info['cover'];
        $re=Db::name('banner')->delete($id);
        if($re){
            $this->err['code']=0;
            //删除图片文件
            @unlink($pic_url);
            //添加日志
            $this->addLog(2,'删除BANNER图【'.$info['title'].'】');
        }else{
            $this->err['msg']='网络延迟，稍后重试';
        }

        return json($this->err);
    }

    /******************************文章分类****************************/
    public function classify(){
        if(Request::isAjax()){
            $listRow=input('limit');
            $where=input('where',[]);
            $map=[];
            if(!empty($where)){
                if(!empty($where['title'])){
                    $map[]=['classify_name','like',"%{$where['title']}%"];
                }
                if($where['classify']){
                    $map[]=['model','=',$where['classify']];
                }
            }
            //获取数据
            $data=ArticleClassify::with('parent')
                ->where($map)->order('create_time desc')
                ->paginate($listRow);

            return json(['code'=>0,'msg'=>'','count'=>$data->total(),'data'=>$data->items()]);
        }else{

            $this->assign('nav_title',"admin/article/classify");
            return view('classify');
        }
    }

    //编辑
    public function classifyEdit(){
        $id = input('id',0);
        if(Request::isAjax()){
            $data=input('post.');
            unset($data['id']);
            try{

                if(!isset($data['classify_name']) || !$data['classify_name']){
                    throw new Exception('参数错误！');
                }
                if($id){
                    $type=3;
                    $info=ArticleClassify::get($id);
                    if(!$info){
                        throw new Exception('无效的参数');
                    }

                    $data['update_time'] = time();
                    $res=$info->save($data);
                    if(!$res){
                        throw new Exception('网络延迟，稍后再试');
                    }

                }else{
                    $type=1;
                    $res=ArticleClassify::create($data);
                    if(!$res){
                        throw new Exception('网络延迟，稍后再试');
                    }
                }

                $this->err['code']=0;
                $this->err['msg']=($type == 1?"添加":"修改")."文章分类【{$data['classify_name']}】成功！";
                //添加日志
                $this->addLog($type,$this->err['msg']);
            }catch (Exception $e){
                $this->err['msg']=$e->getMessage();
            }

            return json($this->err);
        }else{
            if($id){
                $info = ArticleClassify::find($id);
                $this->assign('info',$info);
            }
            //上级分类
            $data = ArticleClassify::field("article_classify_id,classify_name")
                ->where('mode',2)
                ->select()->toArray();
            $this->assign('data',$data);

            $this->assign('nav_title','admin/shop/classify');
            return view('classify_edit');
        }
    }


    //删除
    public function classifyDel(){
        $id=input('id');

        $info=Classify::get($id);
        try{
            if(!$info){
                throw new Exception('未知的参数');
            }
            $title=$info['classify_name'];
            if(!$info->delete()){
                throw new Exception('网络延迟，稍后重试');
            }
            $this->err['code']=0;
            //添加日志
            $this->addLog(2,'删除商品分类【'.$title.'】');
        }catch (Exception $e){
            $this->err['msg']=$e->getMessage();
        }
        return json($this->err);
    }

    /*****************************公共部分**************************/
    //上传图片
    public function uploadPic(){
        //大小限制
        $size=config('image_upload_size');
        //类型限制
        $ext=config('image_upload_extension');

        $this->err = $this->uploadFiles('images','./uploads/article',$size,$ext);
        return json($this->err);
    }

    //上传图片
    public function uploadBanner(){
        //大小限制
        $size=config('image_upload_size');
        //类型限制
        $ext=config('image_upload_extension');

        $this->err = $this->uploadFiles('images','./uploads/banners',$size,$ext);
        return json($this->err);
    }

    //上传文件
    public function uploadFile(){
        //大小限制
        $size=config('file_upload_size');
        //类型限制
        $ext=config('file_upload_extension');

        $this->err = $this->uploadFiles('files','./uploads/file',$size,$ext);
        return json($this->err);
    }

    public function _empty()
    {

        return view('public/404');
    }



}
