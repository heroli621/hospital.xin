<?php

/*
 * 个人控制器
 * */
namespace app\admin\controller;


use app\admin\model\User;
use app\admin\validate\Admin;
use think\Db;
use think\Exception;
use think\facade\Request;



class Mine extends BaseUser
{

    protected $pid=999;
    protected $left_menus=[];
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->assign('nav_path',Db::name('menus')->where('id',$this->pid)->value('link'));
        $left_menus=$this->getNav($this->pid);
        $this->left_menus=$left_menus;
        $this->assign("left_menus",$left_menus);

    }

    public function guide(){
        if(count($this->left_menus)){
            $menu=array_shift($this->left_menus);
            return redirect($menu['link']);
        }else{
            return view('public/guide');
        }

    }

    /*************************个人中心*********************************/
    //重置密码
    public function rePassword(){
        if(Request::isAjax()){
            $id=session('user.uid');
            $info=User::find($id);
            try{
                //验证
                $password2=input('post.password2');
                $old_password=input('post.password1',0);
                $re_password=input('post.re_password3',0);
                if(!preg_match('/^[a-zA-Z0-9_]{6,16}$/',$password2)) {
                    throw new Exception('密码格式错误');
                }
                if($password2==$old_password){
                    throw new Exception('新密码与原密码一致，未更改');
                }

                if($old_password && md5($old_password)!==$info->password){
                    //存在原密码则验证
                    throw new Exception('原密码输入错误');
                }

                if($re_password && $re_password!==$password2){
                    //存在重复密码则验证
                    throw new Exception('两次输入的密码不一致');
                }
                //重置密码并提下线
                $row=$info->save(['password'=>$password2,'session_id'=>'resetPassword']);
                if(!$row){
                    throw new Exception('网络延迟，稍后再试');
                }

                $this->err['code']=0;
                $this->err['msg']='密码重置成功';
                //添加日志
                $this->addLog(3,'重置管理员【'.$info['nickname'].'】密码');

            }catch (Exception $e){
                $this->err['msg']=$e->getMessage();
            }
            return json($this->err);
        }else{
            $this->assign('nav_title','admin/mine/repassword');
            return view('re_password');
        }

    }

    //个人信息
    public function info(){
        if(Request::isAjax()){
            $data=input('post.');
            try{
                $save_data = [
                    'id'=>session('user.uid'),
                    'nickname'=>$data['username'],
                    'update_time'=>time()
                ];
                $validate=new Admin();

                if(!$validate->scene('edit')->check($data)) {
                    throw new Exception($validate->getError());
                }

                //修改用户信息
                $up=Db::name('user')->update($save_data);
                if(!$up){
                    throw new Exception('修改管理员信息失败');
                }

                $this->err['code']=0;
                $this->err['msg']='修改姓名成功！';
                session('user.nickname',$data['username']);
                //添加日志
                $this->addLog(3,'修改个人资料【'.$data['username'].'】');

            }catch (Exception $e){
                $this->err['msg']=$e->getMessage();
            }
            //返回处理结果
            return json($this->err);
        }else{
            $id=session('user.uid');
            $info=Db::name('user')->find($id);
            $this->assign('info',$info);
            $this->assign('nav_title','admin/mine/info');
            return view('info');
        }
    }





    public function _empty()
    {
        //把所有城市的操作解析到city方法
        return view('public/404');
    }




}
