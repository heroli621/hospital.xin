<?php
/*
 * 产品管理
 * */
namespace app\admin\controller;


use app\admin\model\Course;
use app\admin\model\Courseware;
use app\admin\model\Exam;
use app\admin\model\ExamQuestions;
use app\admin\model\Goods;
use app\admin\model\Video;
use think\Db;
use think\Exception;
use think\facade\Request;
use think\facade\Validate;


class Product extends BaseUser
{
    //中间件
    protected $middleware = [
        'app\admin\middleware\Auth' => [
            //无须权限验证
            'except' => ['guide','uploadPic','_empty','uploadFile','index']
        ],
    ];


    protected $pid=57;
    protected $left_menus=[];
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->assign('nav_path',Db::name('menus')->where('id',$this->pid)->value('link'));
        $left_menus=$this->getNav($this->pid);
        $this->left_menus=$left_menus;
        $this->assign("left_menus",$left_menus);

    }

    public function guide(){
        if(count($this->left_menus)){
            $menu=array_shift($this->left_menus);
            return redirect($menu['link']);
        }else{
            return view('public/guide');
        }

    }

    /**********************产品管理***********************/

    //列表
    public function index()
    {
        if(Request::isAjax()){
            $map=[];

            $listRow=input('limit');
            $title=input('title','');
            if(!empty(trim($title))){
                $map[]=['goods_name','like',"%{$title}%"];
            }

            //获取数据
            $data=Goods::where($map)
                ->order('create_time desc')
                ->paginate($listRow);

            return json(['code'=>0,'msg'=>'','count'=>$data->total(),'data'=>$data->items()]);
        }else{

            $this->assign('nav_title','admin/product/index');

            return view('index');
        }

    }

    //编辑页
    public function edit(){
        $id=input('id',0);
        if(Request::isAjax()){
            $data=input('post.');
            try{
                $rule=[
                    'goods_name'=>'require|max:255',
                    'price'=>'require|float',
                    'validate'=>'require|number',
                    'permissions'=>'require',
                ];
                $field=[
                    'goods_name'=>'商品名称',
                    'price'=>'价格',
                    'validate'=>'有效期',
                    'permissions'=>'权益',
                ];
                $validate=Validate::make($rule,[],$field);
                if(!$validate->check($data)){
                    throw new Exception($validate->getError());
                }
                $data['permission'] = implode(',',$data['permissions']);
                unset($data['id'],$data['permissions']);
                if(!isset($data['status'])){
                    $data['status']=0;
                }
                if($id){
                    $info=Goods::find($id);
                    if(!$info){
                        throw new Exception('参数错误');
                    }
                    $type=3;
                    $msg='修改';
                    $data['update_time']=time();
                    $res=$info->save($data);

                }else{
                    $type=1;
                    $msg='添加';
                    $res=Goods::create($data);
                }
                if(!$res){
                    throw new Exception('网络延迟，稍后再试');
                }
                $this->err['code']=0;
                $this->err['msg']=$msg."商品【{$data['goods_name']}】".'成功！';
                //添加日志
                $this->addLog($type,$this->err['msg']);
            }catch (Exception $e){
                $this->err['msg']=$e->getMessage();
            }

            return json($this->err);
        }else{

            if($id){
                $info=Goods::get($id);
                $this->assign('info',$info);
            }
            $permissions = Db::name('goods_permission')->select();
            $this->assign('permissions',$permissions);

            $this->assign('nav_title','admin/product/index');
            return view('edit');
        }

    }

    //删除
    public function del(){

        $id=input('id');

        $info=Video::get($id);
        try{
            if(!$info){
                throw new Exception('未知的参数');
            }
            $title=$info['title'];
            if(!$info->delete()){
                throw new Exception('网络延迟，稍后重试');
            }
            $this->err['code']=0;
            //添加日志
            $this->addLog(2,'删除视频【'.$title.'】');
        }catch (Exception $e){
            $this->err['msg']=$e->getMessage();
        }
        return json($this->err);
    }





    //上传文件
    public function uploadFile(){
        // 获取表单上传文件 例如上传了001.jpg
        $file = request()->file('files');
        if(!$file){
            $this->err['msg']='文件大小超出限制';
            return json($this->err);
        }
        //大小限制 20MB
        $size=20*1024*1024;
        //类型限制
        $ext=["doc","docx","xls","xlsx","ppt","pdf"];
        // 移动到框架网站根目录/uploads/ 目录下
        $info = $file->validate(['size'=>$size,'ext'=>$ext])->move( './uploads/courseware');
        if($info){
            // 成功上传后 获取上传信息
            //dump($info);
            $pname=str_replace('./','/',$info->getPathName());
            $this->err['code']=0;
            $this->err['data']=str_replace('\\','/',$pname);

        }else{
            // 上传失败获取错误信息
            $this->err['msg']=$file->getError();
        }
        return json($this->err);
    }


    public function _empty()
    {
        //把所有城市的操作解析到city方法
        return view('public/404');
    }

}
